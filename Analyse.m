clc, close all

X1 = [321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321  321
];
Y1 = [102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102  102
];
X2 = [444  455  478  488  468  449  432  408  386  363  340  318  296  274  252  230  208  186  164  143  130  148  162  172  182  192  202  213  222  232  242  252  262  272  286  298  312  325  338  350  363  376  388  400  414  426  438  450  462  474  486  498  510  522  533  544  556  568  578  590  601  612  624  634  644  655  666  676  687  697  708  718  728  734  728  723  718  714  709  704  699  694  688  682  676  669  664  658  651  645  640  634  628  623  618  612  607  602  597  592  588  582  578  574  568  564  560  556  552  548  544  540  536  532  528  524  522  518  514  512  508  506  502  500  496  494  491  488  486  483  480  478  476  474  472  470  468  466  464  462  460  460  458  456  455  454  452  452  450  450  448  448  446  446  446  444  444  444  444  444
];
Y2 = [121  174  271  344  358  374  390  379  369  361  353  346  338  330  323  316  308  301  294  287  278  262  247  232  218  203  190  175  162  148  134  120  107  100  109  115  121  128  134  140  146  152  158  164  170  176  181  187  193  199  205  211  216  222  227  233  238  244  250  255  261  266  271  276  282  287  292  298  303  308  313  318  323  329  337  345  353  361  369  376  384  391  390  386  382  378  374  371  367  363  360  357  353  349  346  343  340  336  333  330  327  324  321  317  314  312  309  306  303  301  298  295  293  290  288  286  283  281  279  276  274  272  270  268  266  264  262  261  259  257  255  254  252  251  250  248  246  245  244  242  241  240  239  238  237  235  235  234  233  232  232  231  230  230  229  229  228  228  228  228
];
X3 = [498  498  498  504  541  566  591  614  636  656  670  677  684  692  701  709  718  727  734  731  727  723  719  715  711  706  701  696  691  686  681  676  672  667  662  657  653  648  643  639  635  631  626  622  618  614  609  606  601  598  594  590  586  582  579  575  571  568  564  561  557  554  551  549  547  545  543  541  539  537  535  534  532  530  529  527  526  524  523  522  520  519  517  517  515  514  513  512  511  510  509  508  507  507  506  505  504  504  503  503  502  502  501  501  501  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500  500
];
Y3 = [352  353  353  364  352  299  248  200  156  116  107  138  165  189  210  230  251  272  292  308  325  342  359  376  392  382  372  363  353  344  335  326  317  308  300  291  283  274  266  258  249  241  234  226  218  210  203  195  188  180  173  166  159  152  145  139  132  125  119  112  106  100  98  101  105  108  111  114  117  120  123  126  128  131  133  136  138  140  143  145  147  149  150  152  154  156  157  159  160  161  163  164  165  166  167  168  168  169  170  171  171  172  172  172  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173  173
];




height = 480;
width = 854;
% X1-> red, X2->Yellow, X3-> White
%% Initiate the script


%% Changement des coordonnées pour matlab
Y1 = (height - Y1);
Y2 = (height - Y2);
Y3 = (height - Y3);

%% Detection des bords
Xmin = min([X1,X2,X3])
Xmax = max([X1,X2,X3])
Ymin = min([Y1,Y2,Y3])
Ymax = max([Y1,Y2,Y3])

Xframe = [Xmin Xmax Xmax Xmin Xmin];
Yframe = [Ymin Ymin Ymax Ymax Ymin];

figure(1);
hold on
    set(gca,'Color',[0.4,0.4,0.4]);
    plot(Xframe, Yframe,'-b','DisplayName','Bords du billard');
    plot(X1,Y1,'-r','DisplayName','Boule rouge');
    plot(X2,Y2,'-y','DisplayName','Boule jaune');
    plot(X3,Y3,'-w','DisplayName','Boule blanche');
    legend('TextColor', 'white');
    hold off
%% Détection de la premiere balle qui bouge
    
d=2;
distB1 = sqrt((X1-X1(1)).^2+(Y1-Y1(1)).^2);
distB2 = sqrt((X2-X2(1)).^2+(Y2-Y2(1)).^2)
distB3 = sqrt((X3-X3(1)).^2+(Y3-Y3(1)).^2);
    
b1m=find(abs(distB1)>d, 1);
b2m=find(abs(distB2)>d, 1);
b3m=find(abs(distB3)>d, 1);

%plus petit indice de début de mouvement tfirst et numero de la boule ifirst
A=[b1m,b2m,b3m]
[tfirst,ifirst] = min(A)
A(ifirst) = []
[tsecond, isecond] = min(A);
A(isecond) = [];
tthird = A

if isempty(A) == 1
    fprintf('La balle ne touche pas la 3ème boule');
end

    
%deteciton des rebonds contre les bandes de la balle I
dboule =9;
switch ifirst
    case 1
    XFIRST = X1;
    YFIRST = Y1;
    case 2
    XFIRST = X2;
    YFIRST = Y2;
    case 3
    XFIRST = X3;
    YFIRST = Y3;
end            
    if isempty(tthird) == 1
    rbndXmin = find(abs(XFIRST(tsecond:end)-Xmin)<= dboule)
    rbndXmax = find(abs(XFIRST(tsecond:end)-Xmax)<= dboule)
    rbndYmin = find(abs(YFIRST(tsecond:end)-Ymin)<= dboule)
    rbndYmax = find(abs(YFIRST(tsecond:end)-Ymax)<= dboule)
    
    else
    rbndXmin = find(abs(XFIRST(tsecond:tthird)-Xmin)<= dboule)
    rbndXmax = find(abs(XFIRST(tsecond:tthird)-Xmax)<= dboule)
    rbndYmin = find(abs(YFIRST(tsecond:tthird)-Ymin)<= dboule)
    rbndYmax = find(abs(YFIRST(tsecond:tthird)-Ymax)<= dboule)
    end
    
    
    rbndYmax = abs(diff([0,rbndYmax]))>1
    rbndYmin = abs(diff([0,rbndYmin]))>1
    rbndXmax = abs(diff([0,rbndXmax]))>1
    rbndXmin = abs(diff([0,rbndXmin]))>1
    
    nbrebonds = size(find(rbndXmax),2) + size(find(rbndYmax),2) + size(find(rbndXmin),2)+size(find(rbndYmin),2)

    
%% Detection des chocs entre les boules
    chocs12 = find(abs(Y2-Y1)<=20 & abs(X2-X1)<=20)
    chocs23 = find(abs(Y3-Y2)<=15 & abs(X3-X2)<=15)
    chocs13 = find(abs(Y3-Y1)<=15 & abs(X3-X1)<=15)
    
    